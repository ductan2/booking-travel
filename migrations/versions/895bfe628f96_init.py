"""init

Revision ID: 895bfe628f96
Revises: 
Create Date: 2024-07-27 16:42:03.791923

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '895bfe628f96'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_name'), 'location', ['name'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('tickettravel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bed', sa.Integer(), nullable=False),
    sa.Column('people', sa.Integer(), nullable=False),
    sa.Column('dateTour', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('distance', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('duration', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('timeTour', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tourGuideName', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('tourGuidePhone', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('tourGuidePic', sqlmodel.sql.sqltypes.AutoString(length=2083), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickettravel_category_id'), 'tickettravel', ['category_id'], unique=False)
    op.create_index(op.f('ix_tickettravel_location_id'), 'tickettravel', ['location_id'], unique=False)
    op.create_index(op.f('ix_tickettravel_user_id'), 'tickettravel', ['user_id'], unique=False)
    op.create_table('userbookmarked',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ticket_travel_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ticket_travel_id'], ['tickettravel.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userbookmarked_ticket_travel_id'), 'userbookmarked', ['ticket_travel_id'], unique=False)
    op.create_index(op.f('ix_userbookmarked_user_id'), 'userbookmarked', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_userbookmarked_user_id'), table_name='userbookmarked')
    op.drop_index(op.f('ix_userbookmarked_ticket_travel_id'), table_name='userbookmarked')
    op.drop_table('userbookmarked')
    op.drop_index(op.f('ix_tickettravel_user_id'), table_name='tickettravel')
    op.drop_index(op.f('ix_tickettravel_location_id'), table_name='tickettravel')
    op.drop_index(op.f('ix_tickettravel_category_id'), table_name='tickettravel')
    op.drop_table('tickettravel')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_location_name'), table_name='location')
    op.drop_table('location')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
